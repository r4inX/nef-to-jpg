[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nef-to-jpg-converter"
version = "2.1.0"
description = "A modern Python tool for converting Nikon NEF raw files to JPEG format"
readme = {file = "README.md", content-type = "text/markdown"}
license = {text = "MIT"}
authors = [
    {name = "r4inX", email = "vik.lamp.vl@gmail.com"}
]
maintainers = [
    {name = "r4inX", email = "vik.lamp.vl@gmail.com"}
]
keywords = ["nef", "jpg", "jpeg", "raw", "converter", "nikon", "photography"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Multimedia :: Graphics :: Graphics Conversion",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = [
    "imageio>=2.31.0",
    "rawpy>=0.20.0",
    "numpy>=1.24.0",
    "pillow>=10.0.0",
    "tqdm>=4.64.0",
    "watchdog>=4.0.0",
    "gooey>=1.0.0",
]

[project.optional-dependencies]
build = [
    "pyinstaller>=6.0.0",
]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "black>=24.0.0",
    "flake8>=7.0.0",
    "flake8-pyproject>=1.2.0",
    "isort>=5.13.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.5.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=2.0.0",
    "readme_renderer[md]>=44.0",
]
security = [
    "bandit>=1.7.0",
    "safety>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/r4inX/nef-to-jpg"
Documentation = "https://r4inx.github.io/nef-to-jpg"
Repository = "https://github.com/r4inX/nef-to-jpg"
"Bug Tracker" = "https://github.com/r4inX/nef-to-jpg/issues"
Changelog = "https://github.com/r4inX/nef-to-jpg/blob/main/CHANGELOG.md"

[project.scripts]
nef-converter = "nef_converter.cli:cli_main"
nef2jpg = "nef_converter.cli:cli_main"

[project.gui-scripts]
nef-converter-gui = "nef_converter.gui:gui_main"
nef-gui = "nef_converter.gui:gui_main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.txt", "*.md", "*.rst"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# MyPy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "rawpy",
    "imageio",
]
ignore_missing_imports = true

# Flake8 configuration (in pyproject.toml via flake8-pyproject)
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "E501", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".eggs",
]
per-file-ignores = [
    "__init__.py:F401",
]

# Bandit security scanner configuration
[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
skips = ["B404", "B603"]